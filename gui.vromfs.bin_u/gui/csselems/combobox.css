@const comboListPadding:0;
@const comboOptionPadding:5@sf/@pf;
@const comboBtnWidth:@baseTrHeight - 4@dp;

ComboBox {
  behaviour:dropdown-select;
  re-type:dropdown-select;
  css-hier-invalidate:yes;
  
      _needBtnPos:yes;
  screen-offset:@bh;

  background-color:@navButtonImgColor;
  background-image:#ui/gameuiskin#selectbox_bg;
  background-position:5;
  background-repeat:expand;

  min-height:@baseTrHeight - 4@dp;
}

.optionsTable > tr > td > ComboBox {
  height:ph-4@dp;
  width:0.3@scrn_tgt;
  max-width:pw;
  pos:0, 50%ph-50%h;
  position:relative;
}

tr[optionWidthInc=double] > td > ComboBox {
  width:0.6@scrn_tgt;
}

tr[optionWidthInc=half] > td > ComboBox {
  width:0.45@scrn_tgt;
}

tr[optionWidthInc=triple] > td > ComboBox {
  width:0.9@scrn_tgt;
}

tr > tdiv > ComboBox {
  width:pw;
}

[show_console_buttons=yes] .optionsTable > tr > td > ComboBox {
  btnPos:left;
  btnType:leftOpen;
}

[show_console_buttons=yes] ComboBox[btnName] {
  btnPos:left;
}

ComboBox[btnPos] {
  _needBtnPos:no;
}

ComboBox[_needBtnPos=yes] {
  btnPos:right;
}

ComboBox[btnPos=left] {
  padding-left:@comboBtnWidth;
}
ComboBox[btnPos=right] {
  padding-right:@comboBtnWidth;
}

ComboBox:hover {
  background-image:#ui/gameuiskin#selectbox_bright_bg;
}

ComboBox > button {
  width:@comboBtnWidth;
  height:ph;
  top:0.5ph-0.5h;
  re-type:fgPict;
  background-color:@navButtonImgColor;
  background-image:#ui/gameuiskin#drop_menu_separator;
  background-repeat:expand;
  background-position:5,3,0,3;
  foreground-color:@navButtonImgColor;
  foreground-image:#ui/gameuiskin#drop_menu_icon;
  foreground-repeat:aspect-ratio;
  foreground-position:0.5w-6@dp,0.5h-4@dp;
  color-factor:127;
}

ComboBox:focus > button,
ComboBox:hover > button {
  color-factor:255;
}

ComboBox[btnType=leftOpen] > button {
  foreground-image:#ui/gameuiskin#SpinnerListBox_arrow_right;
}

ComboBox:expanded > button {
  rotation:180;
  background-position:0,3,5,3;
}

ComboBox[btnPos=left] > button {
  left:0;
  background-position:0,3,5,3;
}

ComboBox[btnPos=left]:expanded > button {
  left:0;
  background-position:5,3,0,3;
}

ComboBox[btnPos=leftOutside] > button {
  left:-w;
}

[show_console_buttons=yes] ComboBox[btnName=X] > button {
  _hasBtnImage:yes;
  foreground-image:#ui/controlskin#button_x;
}
[show_console_buttons=yes] ComboBox[btnName=X] > button:pushed {
  foreground-image:#ui/controlskin#button_x_pressed;
}

[show_console_buttons=yes] ComboBox[btnName=R3] > button {
  _hasBtnImage:yes;
  foreground-image:#ui/controlskin#r_stick;
}
[show_console_buttons=yes] ComboBox[btnName=R3] > button:pushed {
  foreground-image:#ui/controlskin#r_stick_pressed;
}


[show_console_buttons=yes] ComboBox[_hasBtnImage=yes]:expanded > button,
[show_console_buttons=yes] PosOptionsNavigator > * > * > ComboBox:focus > button,
[show_console_buttons=yes] ComboBox[focusFrame=yes]:focus > button {
  _hasBtnImage:yes;
  foreground-image:#ui/controlskin#button_a;
}

[show_console_buttons=yes] PosOptionsNavigator > * > * > ComboBox:focus > button:pushed {
  foreground-image:#ui/controlskin#button_a_pressed;
}

ComboBox > button:disabled {
  display:hide;
}

ComboBox[btnPos=left] > button[_hasBtnImage=yes] {
  foreground-position:0,0,2,0;
  color-factor:255;
}

ComboBox[btnPos=right] > button[_hasBtnImage=yes] {
  foreground-position:2,0,0,0;
  color-factor:255;
}

ComboBox:expanded[btnPos=left] > button[_hasBtnImage=yes] {
  rotation:0;
  background-position:0,3,5,3;
}

ComboBox:expanded[btnPos=right] > button[_hasBtnImage=yes] {
  rotation:0;
  background-position:5,3,0,3;
}

ComboBox > listBox {
  width:pw + 2@comboListPadding;
  left:50%pw-50%w;
  padding:1@comboListPadding;
  overflow-y:auto;

  re-type:rotation;
  background-color:@white;
  background-image:#ui/gameuiskin#popup_menu_bg;
  background-repeat:expand;
  background-position:4, 12, 4, 4;

  not-input-transparent:yes;
  notify:~;   navigatorShortcuts:active; }

ComboBox > listBox[listboxAlign=top] {
  padding-top:1@comboListPadding + 14;
}

ComboBox > listBox[listboxAlign=bottom] {
  background-rotation:180;
  padding-bottom:1@comboListPadding + 14;
}

ComboBox > option,
ComboBox > listBox > option {
  padding:1@comboOptionPadding, 1@dp;
  font:@option_font;
  color:@commonTextColor;
  css-hier-invalidate:yes;
  overflow:hidden;
}

ComboBox.moveleft option {
 text-align:right;
}

ComboBox > option {
  size:pw, ph;
}

ComboBox > listBox > option {
  size:pw, p.p.h;
}

ComboBox > listBox > option:current,
ComboBox > listBox > option:hover {
  background-color:@white;
  background-position:5;
  background-repeat:expand;
  background-image:#ui/gameuiskin#line_selection_button;
}

ComboBox > listBox > option:hover {
  background-image:#ui/gameuiskin#line_selection_button_hover;
}

ComboBox > option > optiontext,
ComboBox > listBox > option > optiontext {
  min-width:fw;
  input-transparent:yes;
}

ComboBox:hover > option > optiontext,
ComboBox:focus > option > optiontext,
ComboBox > listBox > option:hover > optiontext,
ComboBox > listBox > option:current > optiontext {
  auto-scroll:slow;
}

ComboBox:hover > option,
ComboBox:hover > option > optiontext,
ComboBox > listBox > option:hover,
ComboBox > listBox > option:hover > optiontext,
tr:hover > td > ComboBox > option > optiontext {
  color:@hoverTextColor;
}

ComboBox > listBox > option:current > optiontext,
ComboBox:focus > option > optiontext {
  color:@activeTextColor;
  font:@option_selected_font;
}

dropright > listBox > option:disabled > optiontext
{
  color:@disabledTextColor;
}