@import "const\colors.css"
@import "const\_const.css"

@import "cssElems\buttons.css"
@import "cssElems\checkbox.css"
@import "cssElems\switchbox.css"

@import "optionlist.css"
@import "tacticalscr.css"
@import "pedia.css"
@import "cssElems\keyboard.css"

@const rowHoverBackgroundColor: #18181818;
@const rowFocusBackgroundColor: #332C2C2C;
@const rowFocusForegroundColor: #C6AEAEAE;

tdiv, img, img2, pcHide, pcOnly, shopAirImg, voiceIcon {
  input-transparent: yes;
  if_target_pc:@target_pc;
}

cardImg {
  background-repeat:aspect-ratio;
}

img[background-image], img2[background-image], cardImg[background-image], voiceIcon[background-image] {
  background-color:@white;
}

img[background-image=""], img2[background-image=""], cardImg[background-image=""], voiceIcon[background-image=""] {
  background-color:@transparent;
  display:hide;
}

cardImg, cardAvatar {
  size:@cIco, @cIco;
  top:50%ph-50%h;
  position:relative;
  background-svg-size:@cIco, @cIco;
}
cardImg[type=small] {
  size:@sIco, @sIco;
  background-svg-size:@sIco, @sIco;
}

cardImg[type=medium]
{
  size: @mIco, @mIco;
  background-svg-size:@mIco, @mIco;
}

cardImg[type=large]
{
  size: @lIco, @lIco;
  background-svg-size:@lIco, @lIco;
}

cardAvatar {
  behavior:bhvAvatar;
}

.lbTable > tr.commonIconsStyle {
  inactive:yes;
  commonTextColor:yes;
  bigIcons:yes;
}

.smallIconsStyle > td > cardImg{
  pos:50%pw-50%w, 50%ph-50%h;
  position:absolute;
}

.lbTable > [bigIcons] cardImg {
  size:@leaderboardHeaderHeight, @leaderboardHeaderHeight;
  top:ph-h-0.4*@scrn_tgt/100.0;
  left:50%pw-50%w;
  background-color:@imageNotSelectedColor;
  background-svg-size:@leaderboardHeaderHeight, @leaderboardHeaderHeight;
}

cardImg[type=tiny] {
  size:@sIco, @sIco;
  background-svg-size:@sIco, @sIco;
}

cardImg[type=veryTiny] {
  size:0.6@sIco, 0.6@sIco;
  background-svg-size:0.6@sIco, 0.6@sIco;
}

.lbTable td:hover cardImg {
  background-color:@imageHoverColor;
}

.lbTable td[no-hover = yes] cardImg {
  background-color:@imageNotSelectedColor;
}

.lbTable td[active=yes] cardImg {
  background-color:@white;
}

cardImg > activeText {
  pos:50%pw-50%w, 50%ph-50%h;
  position:relative;
}
.mpTable cardImg {
  input-transparent:yes;
}
.infoRow cardImg {
  margin-right:1*@scrn_tgt/100.0;
}
.infoRow activeText {
  margin-right:0.5*@scrn_tgt/100.0;
  top:50%ph-50%h;
  position:relative;
}
.flowRow > curCountryAir {
  margin-right:0.01@sf;
}
.flowRow[flow=h-flow] > curCountryAir {
  width:50%pw - 0.01@sf;
}
.flowRow[flow=h-flow] > curCountryAir > text.air_name {
  pare-text:yes;
  width:pw - 50*@sf/@pf_outdated;
}

movie {
  behavior: movie;
}

airRow {
  min-height:1@cIco;
}
airRow > activeText, airRow > text {
  top:50%ph-50%h;
  position:relative;
  talign:left;
}
airRow > cardImg {
  margin-left:0.02@sf;
}

titletext, menutitle, dyncampresult, debriefingTitle
{
  re-type:text;
  font:@fontMedium;
  text-shade-x:0;
  text-shade-y:0;
  text-shade-color:@mainTitleStrokeColor;
  color:@mainTitleTextColor;
  text-align:center;
}

debriefingTitle {
  text-shade:smooth;
  text-shade-x:1;
  text-shade-y:1;
  text-shade-color:#CC000000;
}

titletext {  

  position:absolute;
  pos:@titlePos,1@topBarHeight;
  text-align:left;
}

[type=shop] titletext, titletext[type=shop] {
  pos:@titlePos,12*@scrn_tgt/100.0-h;
}
titletext[type=top] {
  pos:@titlePos, 11*@scrn_tgt/100.0-h;
}
titletext[type=small2] {
  pos:@titlePos, 12*@scrn_tgt/100.0;
}
titletext[type=small1][posType=top] {
  pos:@titlePos, 1*@scrn_tgt/100.0;
}
titletext[type=small2][posType=top] {
  pos:@titlePos, 6*@scrn_tgt/100.0;
}

titletext[type=small1], titletext[type=small2] {
  font-ht:5*@scrn_tgt/100.0;
}

menutitle {  

  position:absolute;
  pos:@titlePos,8.5*@scrn_tgt/100.0;
  text-align:left;
}

textarea, textAreaCentered, helpText, awardText, framedMessage, textAreaNoScroll,
textareaNoTab, titleTextArea,textAreaSmall, notificationText, tooltipDesc {
  font:@fontNormal;
  behaviour:textArea;
  re-type:textarea;
  color:@commonTextColor;
}

animText {
  behaviour:textArea;
  re-type:textarea;
  color:@commonTextColor;
}

CheckBox[enable=no] > textarea {
  color:@minorTextColor;
}

blankTextArea {
  behaviour:textArea;
  re-type:textarea;
}

sessionInfoText {
  behaviour:textArea;
  re-type:textarea;
  width:pw;
  text-align:right;
  font:@fontSmall;
  color:@commonTextColor;
}

textareaNoTab[controlsHelp=yes] {
  font:@fontTiny;
  color:@commonTextColor;
}

tooltipDesc {
  max-width:70*@scrn_tgt/100.0;
  font:@fontSmall;
}

tutorDark {
  background-color:@modalShadeColor;
}
tutorLight {
  border:yes;
  border-color:#70707070;
}

chatBlock {
  border:yes;
  border-offset:@dp;
  border-color: @frameDarkBorderColor;
  background-color: @frameDarkBackgroundColor;
  padding: 1@framePadding;
}

chatBlock[paddingSize=small] {
  padding: 1@dp;
}

chatLog {
  behaviour:textArea;
  re-type:textarea;
  color:@commonTextColor;
  font:@fontSmall;
  wrap-indent:3*@scrn_tgt/100.0;
  paragraph-indent:0;
}

hudMessageStack {
  behaviour:hudMessageStack;
}

titleTextArea {
  width:pw;
  font:@fontMedium;
  color:@titleTextColor;
}
textareaNoTab[caption=yes] {
  font:@fontMedium;
  color:@titleTextColor;
}

textarea, textAreaNoScroll {
  paragraph-indent:3*@scrn_tgt/100.0;
}
textAreaNoScroll.active, textAreaCentered.active {
  color:@activeTextColor;
}

textarea.parInvert {
  paragraph-indent:0;
  wrap-indent:3*@scrn_tgt/100.0;
  font:@fontTiny;
}

textAreaCentered, framedMessage {
  text-align:center;
  paragraph-indent:0;
  wrap-indent:0;
}
textarea[text-align=center] {
  paragraph-indent:0;
  wrap-indent:0;
}

textAreaSmall {
  font:@fontNormal;
  color:@activeTextColor;
}

helpText {
  position:absolute;
  wrap-indent:1*@scrn_tgt/100.0;
  color:@activeTextColor;
}

awardText {
  width:pw;
  margin:0, 0.5*@scrn_tgt/100.0, 0, 0.5*@scrn_tgt/100.0;
  padding-top:1.5*@scrn_tgt/100.0;
  padding-left:8*@scrn_tgt/100.0;
  min-height:7*@scrn_tgt/100.0;
}

awardText > awardImg {
  height:40*@sf/@pf_outdated;
  width:h;
  pos:4*@scrn_tgt/100.0-50%w,50%ph-50%h;
  position:absolute;
}

awardText[type=unlocked] > awardImg {
  background-color:@white;
  background-image:#ui/gameuiskin#unlocked;
}

awardText[type=newrank] > awardImg {
  background-color:@white;
  background-image:#ui/gameuiskin#icon_primary_success;
}

awardText[type=arcade] > awardImg {
  background-color:@white;
  background-image:#ui/gameuiskin#mission_complete_arcade;
}

awardText[type=realistic] > awardImg {
  background-color:@white;
  background-image:#ui/gameuiskin#mission_complete_realistic;
}

awardText[type=hardcore] > awardImg {
  background-color:@white;
  background-image:#ui/gameuiskin#mission_complete_simulator;
}

awardText[type=image] > awardImg { background-color:@white; }

toolbar {
  input-transparent: yes;
  re-type:9rect;
  background-repeat:expand;
  border:none;
  border-color:@transparent;
  background-color:@white;
  background-position:10;
  background-image:#ui/skin#toolbar;
}

text, optiontext, optionValueText, header, optionheader, activeText,
widthText, titleWidthText, textButtonHint
{
  re-type:text;
  color:@commonTextColor;
  font:@fontNormal;
}

text[textHide=yes][text=""], activeText[textHide=yes][text=""],
textAreaCentered[textHide=yes][text=""], textareaNoTab[textHide=yes][text=""] {
  display:hide;
}

.normalFont text, .normalFont textareaNoTab {
  font:@fontNormal;
}

versionText {
  re-type:text;
  color:@commonTextColor;
  font:@fontSmall;
  id:"version_text";
  pos:0, 50%ph-50%h;
  position:relative;
}

notificationText {
  pos:pw-w-0.01@scrn_tgt, 50%ph-50%h;
  position:absolute;
  height:ph;
  color:@premiumColor;
}

discount {
  re-type:text;
  height:ph;
  min-width:1.5h+2@discountBoxPadding;
  padding:1@discountBoxPadding;
  color:@discountTextColor;
  font:@fontNormal;
  textShade:yes;
  background-image:#ui/gameuiskin#discount;
  background-color:@white;
  input-transparent:yes;
}

discount[type=new] {
  behaviour:textArea;
  re-type:textarea;
  color:@white;
  background-image:#ui/gameuiskin#discount_box_bg;
  background-color:@discountBGColor;
  pos:pw-w, ph-2*@sf/@pf_outdated;
  position:absolute;
  font:@fontSmall;
  padding:10*@sf/@pf_outdated, 1*@sf/@pf_outdated, 3*@sf/@pf_outdated, 1*@sf/@pf_outdated;
  background-repeat:expand;
  background-position:6,2,2,2;
}

discount[type=inTab] {
  pos:0, 50%ph-50%h;
  margin-left: 1@blockInterval;
  position:relative;
  rotation:0;
}

discount_notification {
  background-color:@discountBGColor;
  background-repeat:expand;
  input-transparent:yes;
  font:@fontSmall;
  color:@discountTextColor;
  textShade:yes;
}

:hover > discount_notification,
:hover > additionalIconsDiv > discount_notification,
[show_console_buttons=yes] [selected=yes] > discount_notification,
[show_console_buttons=yes] [selected=yes] > additionalIconsDiv > discount_notification {
  background-color:@hoverDiscountBGColor;
}

:pushed > discount_notification,
:pushed > additionalIconsDiv > discount_notification {
  background-color:@pushedDiscountBGColor;
}

discount_notification[text=""],
HorizontalListBox > shopFilter[selected=yes] > discount_notification {
  display:hide;
}

discount_notification[type=down] {
  background-image:#ui/gameuiskin#discount_icon_down;
  size:24*@sf/@pf_outdated, 27*@sf/@pf_outdated;
  pos:10%ph, -h;
  position:absolute;
  tooltip:"#discount/notification";
}

discount_notification[type=up] {
  background-image:#ui/gameuiskin#discount_icon_up;
  size:24*@sf/@pf_outdated, 27*@sf/@pf_outdated;
  pos:10%ph, ph;
  position:absolute;
  tooltip:"#discount/notification";
}

discount[type=weaponryItem] {
  re-type:text;
  background-image:#ui/gameuiskin#discount_box_down_bg;
  background-color:@discountBGColor;
  background-repeat:expand;
  background-position:21,2,2,6;
  padding:1@discountBoxPadding, 1@discountBoxPadding, 1@discountBoxPadding, 1@discountBoxDownArrowHeight;
  height:1@discountBoxDownHeight;
  font:@fontSmall;
  color:@discountTextColor;
}

discount_notification[type=line] {
  re-type:text;
  background-image:#ui/gameuiskin#discount_box_bg;
  background-position:7,7,3,3;
  padding:2@dp,2@dp,0,0;
  height:1@discountBoxHeight+2@dp;
  min-width:h;
  text:"%";
  tooltip:"#discount/notification";
}

discount_notification[type=lineText] {
  re-type:text;
  background-image:#ui/gameuiskin#discount_box_bg;
  background-position:7,7,3,3;
  padding:2@dp,2@dp,0,0;
  height:1@discountBoxHeight;
  min-width:2h;
}

Button_text > discount_notification[type=lineText] {
  pos:pw-w-1@blockInterval, 1@blockInterval;
  position:absolute;
  height:ph-2@blockInterval;
}

discount_notification[type=box_down] {
  re-type:text;
  background-image:#ui/gameuiskin#discount_box_down_bg;
  background-position:21,2,2,6;
  padding:1@discountBoxPadding,1@discountBoxPadding,1@discountBoxPadding,1@discountBoxDownArrowHeight;
  height:1@discountBoxDownHeight;
  left:pw-w-8*@sf/@pf;
  top:-1@discountBoxUnitTop;
  position:absolute;
}

discount_notification[type=box_left] {
  re-type:text;
  background-image:#ui/gameuiskin#discount_box_bg;
  background-position:7,7,3,3;
  padding:2@dp,2@dp,0,0;
  height:1@discountBoxHeight+2@dp;
  min-width:2h;
  left:pw-1@blockInterval;
  top:50%ph-50%h;
  position:absolute;
}

discount_notification[type=box_down][noShift] {
  left:pw-w;
}

discount_notification[place=unit] {
  pos:pw-w, -1@discountBoxUnitTop;
}

discount_notification[place=unitGroup] {
  pos:pw-w, -1@discountBoxUnitTop;
}

discount_notification[type=box_up] {
  re-type:text;
  background-image:#ui/gameuiskin#discount_box_up_bg;
  background-position:21,6,2,2;
  padding:1@discountBoxPadding, 1@discountBoxDownArrowHeight, 1@discountBoxPadding, 0;
  height:1@discountBoxDownHeight;
  pos:50%pw-50%w, ph -h + 8*@sf/@pf;
  position:absolute;
}

bonus {
  pos:0,0;
  position:absolute;
  size:28*@sf/@pf_outdated, 28*@sf/@pf_outdated;
  re-type:9rect;
  padding:0,0;
  background-color:@transparent;
  background-repeat:expand;
}

bonusNoFrame {
  pos:50%pw-50%w, 0.5ph - 0.5(h - 1@cIco); 
  position:relative;
  size:1@slot_hdr_width, 1.577@slot_hdr_width;
  background-color:@transparent;
  background-repeat:expand;
}

bonus[bonusType=wp], bonusNoFrame[bonusType=wp]     { background-color:@WPMultiplierColor; }
bonus[bonusType=exp], bonusNoFrame[bonusType=exp]    { background-color:@ExpMultiplierColor; }
bonus[bonusType=wp_exp], bonusNoFrame[bonusType=wp_exp] { background-color:@BothMultiplierColor; }

discount[text=""], discount_notification[showDiscount=no], bonus[background-image=""], bonusNoFrame[background-image=""] {
  display:hide;
}

subtitles, subtitles_slow {
  font:@fontNormal;
  behaviour:textarea;
  re-type:textarea;
  color:@white;
  wrap-indent:0;
  paragraph-indent:0;

  background-color:@transparent;
  tabStop:no;
  margin:2*@sf/@pf_outdated, 0;

  behaviour:basicTransparency;
  transp-base:0;
  transp-end:255;
  transp-time:-500;
  transp-func:square;
}

subtitles[animShow=show] {
  transp-time:300;
}

subtitles_slow[animShow=show] {
  transp-time:2000;
}

activeText {
  color:@activeTextColor;
  text-align:left;
}

activeText[parseTags=yes] {
  behaviour:textArea;
  re-type:textarea;
}

[commonTextColor=yes] activeText, activeText[commonTextColor=yes] {
  color:@commonTextColor;
}

activeText[noMargin=yes] {
  margin-left:0;
  margin-top:0;
  margin-right:0;
  margin-bottom:0;
}

[gamertag] activeText, [gamertag] text {
  font:@fontSmall;
}

activeText[cardItem] {
  color:@cardItemNameColor;
}

activeText[cardItem=info] {
  color:@cardItemInfoColor;
}

activeText[changeColor=fixedAxis] {
  color:@fixedAxisColor;
}
activeText[changeColor=inQueue] {
  color:@inQueueTextColor;
}

widthText, titleWidthText {
  min-width:pw-0.02*@scrn_tgt;
  height:0.035*@scrn_tgt;
  text-align:left;
  position:relative;

  auto-scroll:slow;
}

widthDiv[text-align=right] widthText, widthDiv[text-align=right] titleWidthText,
widthDiv[text-align=right] activeText, activeText[talign=right], text[talign=right],
notificationText[talign=right], textareaNoTab[talign=right] {
  text-align:right;
}

text[talign=left], activeText[talign=left] {
  text-align:left;
  padding:0, 0, 0, 0;
}

titleWidthText {
  font:@fontMedium;
  pos:0,0.03*@scrn_tgt;
  min-width:pw-0.01*@scrn_tgt;
}

widthText[text=""], titleWidthText[text=""] {
  display:hide;
}

widthDiv {
  flow:vertical;
  overflow:hidden;
}

widthLine {
  size:pw, 1;
  margin-top:-0.01*@scrn_tgt;
  pos:0,-0.005*@scrn_tgt;
  position:relative;
  background-color:@tableBorderColor;
}

[textStyle=mis-descr] > text {
  hideEmptyText:yes;
  color:@activeTextColor;
}

[textStyle=mis-descr] > textareaNoTab {
  width:pw;
  font:@fontNormal;
  pos:1*@scrn_tgt/100.0, -1*@scrn_tgt/100.0;
  padding-left:0.01*@scrn_tgt + 0.01*@scrn_tgt*@isWide;
  position:relative;
  hideEmptyText:yes;
}

[textStyle=mis-middle] text, [textStyle=mis-middle] textareaNoTab {
  width:50%pw;
  hideEmptyText:yes;
  padding:1*@scrn_tgt/100.0, 0;
}

CheckBox:hover > textareaNoTab {
  color:@hoverMenuButtonColor;
}

CheckBox:pushed > textareaNoTab {
  color:@pushedMenuButtonColor;
}

optiontext {
  min-width:pw-1*@scrn_tgt/100.0;   text-align:right;
  font:@option_font;
}

optionBlockHeader {
  behaviour:textArea;
  re-type:textarea;
  min-width:pw-1*@scrn_tgt/100.0;
  text-align:left;
  font:@mis_chapter_font;
  color:@chapterUnlockedColor;
  padding-left:0.08@sf;
}

dropright[tankBullet=yes] optiontext{
  min-width:0;
  max-width:pw-0.2@sf;
  pare-text:yes;
}

optiontext[textStyle=textarea] {
  behaviour:textArea;
  re-type:textarea;
  height:ph;
}

optionheader {
  text-align:center;
  font:@fontMedium;
  pare-text:yes;
  color:@activeTextColor;
}

td > optionheader {
   width:p.p.w;
   pos:(p.p.w-w)/2,p.p.h-h-0.5*@scrn_tgt/100.0;
   position:absolute;
}

table
{
  re-type:table;
  background-color:@transparent;
}

option {
  re-type:9rect;
    }

option:current {
  color:@activeTextColor;
  re-type:9rect;
  background-repeat:expand;
}

dummy
{
  behaviour:button;
  re-type:9rect;
  background-color:@transparent;
  color:@transparent;
  selected-border:none;
  border:none;
}

timer {
  behaviour:Timer;
}

center, h1, h2, h3, h4 {
  position:relative;
  left:(pw-w)/2;
}

textList {
  input-transparent:yes;
  re-type:text;
}

[text-valign=center] td > text, [text-valign=center] td > activeText, [text-valign=center] > activeText,
tr[text-valign=center] optiontext, .optionsTable optiontext, .optionsTable activeText, .crewTable optiontext, textareaNoTab[text-valign=center] {
  position:relative;
  top:(ph-h)/2;
}
[text-halign=center] td > text, [text-halign=center] td > activeText, [text-halign=center] > activeText, [tdalign=center] > activeText {
  min-width:pw;
  text-align:center;
  padding:0;
}

td[text-align=left] > optiontext {
  text-align:left;
  padding:0, 0, 0, 0;
}

td[text-align=center] > optiontext {
  text-align:center;
  padding:0, 0, 0, 0;
}

activeText[tdalign=right], [tdalign=right] > activeText, [tdalign=right] > textarea {
  width:pw;
  text-align:right;
  padding:0;
}
activeText[tdalign=left], [tdalign=left] > activeText {
  text-align:left;
}
[tdalign=split] > activeText {
  pos:pw-50%w, 50%ph-50%h;
  position:absolute;
}

td {
  padding:@tablePad,0;
}

tdIcon34x30, tdIcon45x25, sideLogIcon {
  background-color:@controlColor;
    size:34*@sf/@pf_outdated, 30*@sf/@pf_outdated;
  max-height:ph;
  max-width:1.14ph;
  pos:50%pw-50%w,50%ph-50%h;
  position:relative;
}

tdIcon34x30[align=left] {
  pos:0, 50%ph-50%h;
}

tdIcon45x25 {
  size:45*@sf/@pf_outdated, 25*@sf/@pf_outdated;
  max-height:ph;
  max-width:45/25h;
}

tdIcon34x30[tdalign=right] {
  pos:pw-w,50%ph-50%h;
}

fontIcon20, fontIcon32 {
  pos:pw/2-w/2, ph/2-h/2;
  position:relative;
  background-color:@transparent;
}

[tdalign=center] > fontIcon20, [tdalign=center] > fontIcon32 {
  position:absolute;
}

fonticon {
  re-type:text;
  pos:pw/2-w/2, ph/2-h/2;
  position:absolute;
  color:@controlColor;
  text-shade:"smooth:24";
  text-shade-x:0;
  text-shade-y:0;
  text-shade-color:#80000000;
}

fontIcon20 {
  size:@cIco, @cIco;
}
fontIcon20 > fonticon {
  font:@fontNormal;
}

fontIcon32 {
  size:@mIco, @mIco;
}
fontIcon32 > fonticon {
  font:@fontMedium;
}

[normalFont=yes] fontIcon32 > fonticon {
  font:@fontNormal;
}

sideLogIcon {
  pos:-w,2.5*@scrn_tgt/100.0-50%h;
}

logIcon {
  background-color:@controlColor;
  height:3.0*@scrn_tgt/100.0;
  width:1.8h;
  pos:0, 50%ph-50%h;
  position:relative;
}

[baseRow=yes] > tr {
  size:pw,@baseTrHeight;
}

.fastshortcut > tr {
  re-type:9rect;
  background-image:#ui/gameuiskin#horizontal_fade;
  background-repeat:expand;
  background-position:1,0,0,0;
  background-color:@black;
  text-valign:center;
}

[baseRow=yes] > tr[headerRow=yes] {
  size:pw,@baseTrHeaderHeight;
  padding-top:@baseTrHeaderHeight-1@baseTrHeight;
}

verticalCellsOptions[baseRow=yes] > tr {
  size:pw, 1@optionsHeaderRowHeight + 1@baseTrHeight;
}

[baseRow=rows16] > tr {
  size:pw,@rows16height;
}
[baseRow=small] > tr {
  size:pw,@smallRowHeight;
}

[baseRow=slider] > tr {
  size:pw,@sliderRowHeight;
}

.controls_settings > tr {
  size:pw,@baseTrHeight;
}
.crewTable > tr {
  height:@crewTrHeight;
}
.lbTable > tr, .schemeTable > tr {
  height:@leaderboardTrHeight;
}
.lbTable tr[headerRow=yes] {
  height:2@leaderboardTrHeight;
}
.lbTable tr[headerRow=first] {
  height:1.3@leaderboardTrHeight;
}
.lbTable > tr[bigIcons] {
  height:@leaderboardHeaderHeight;
}

.crewTable > tr > td, .lbTable > tr > td {
  height:ph;
  padding:0.005@scrn_tgt, 0;
}
.lbTable > tr > td {
  min-width:0.06@sf;
}
.lbTable > tr > td[cellType=splitRight] {
  min-width:10*@sf/@pf_outdated;
  padding-right:0.25*@scrn_tgt/100.0;
}
.lbTable > tr > td[cellType=splitLeft] {
  min-width:10*@sf/@pf_outdated;
  padding-left:0.25*@scrn_tgt/100.0;
}

.airInfoPanel > tr > td {
  min-width:0.5@airInfoPanelWidth;
}

tr[totalRowStyle], tr[totalRowStyle] > td {
  css-hier-invalidate:yes;
}
[baseRow=rows16] > tr[totalRowStyle=yes] {
  size:pw, @rows16height + 0.03@sf;
}
[baseRow=rows16] > tr[totalRowStyle=first] {
  size:pw, @rows16height + 0.01@sf;
}
[baseRow=rows16] > tr[totalRowStyle=last] {
  size:pw, @rows16height + 0.02@sf;
}
tr[totalRowStyle=yes] > td, tr[totalRowStyle=first] > td {
  padding-top:0.01@sf;
}
tr[totalRowStyle=yes] > td, tr[totalRowStyle=last] > td {
  padding-bottom:0.02@sf;
}
[baseRow=rows16] > tr[buttonRow=yes] {
  size:pw, @rows16height + 1@buttonHeight + 2*@sf/@pf_outdated;
}
[baseRow=rows16] > tr[buttonRow=yes] > td {
  padding-bottom:1@buttonHeight + 2*@sf/@pf_outdated;
}

tr[iconType] {
  text-valign:center;
}

tr[iconType=pilot] {
  size:pw,15*@scrn_tgt/100.0;
}

tr[iconType=aircraft] {
  size:pw,@shopAirHeight + 6*@sf/@pf_outdated;
}

tr[iconType=country] {
  size:pw,8*@scrn_tgt/100.0;
}
tr[iconType=listbox] {
  size:pw, 3@baseTrHeight;
}
tr[iconType=listbox_country] {
  size:pw, 3@baseTrHeight;
}

tr[iconType=crosshair] {
}

tr[queueTableIconRow=yes] > td > img {
  iconType:country_battle;
  position:relative;
  pos:0.5pw-0.5w, 0.5ph-0.5h;
}

tr[queueTableIconRow=yes] > td {
  min-width:1@queueTableColumnWidth;
}

tr[queueTableTitleRow=yes] {
  background-color:@evenQueueTableTrColor;
  height:0.03@sf;
}

tr[queueTableTitleRow=yes] text {
  pos:0.5p.p.w-0.5w, 0.5ph-0.5h;
  position:absolute;
}

[baseRow=yes] > tr > td > textareaNoTab {
  word-wrap:no;
}

[baseRow=rows16] > tr > td > textareaNoTab {
  max-height:@rows16height;
  word-wrap:no;
}

.optionsTable > tr, .headerTable > tr, .transpTable > tr {
  background-color:@transparent;
}

verticalCellsOptions {
  flow:vertical;
}

verticalCellsOptions > tr {
  flow:vertical;
  width:pw;
}

tr[even=yes] {
  background-color:@evenTrColor;
}
tr[even=yes][queueTableRow=yes] {
  background-color:@evenQueueTableTrColor;
}

tr[selected=yes],
.crewTable > tr:hover,
.mpTable > tr:hover,
.optionsTable > tr:hover,
.lbTable > tr:hover {
  re-type:9rect;
  background-image:"";
  background-position:0;
  background-color:@rowHoverBackgroundColor;
  foreground-position:0, h-1@dp, 0, 0;
  foreground-color:@transparent;
}

tr[inactive=yes]:hover {
  background-color:@transparent;
  foreground-color:@transparent;
}

tr[selected=yes], [higlightRowOnHover=yes] > tr:hover {
  _needHighLight:yes;
}

[higlightRowOnHover=yes] > tr[inactive=yes],
[invisibleSelection=yes] > * > tr {
  _needHighLight:no;
}

tr[_needHighLight=yes] {
  re-type:9rect;
  background-image:"";
  background-position:0;
  background-color:@rowFocusBackgroundColor;
  foreground-position:0, h-1@dp, 0, 0;
  foreground-color:@rowFocusForegroundColor;
}

tr[_needHighLight=no] {
  background-color:@transparent;
  foreground-color:@transparent;
}

tr[selType=left], [selType=left] > tr[selected=yes] {
  re-type:rotation;
  background-rotation:180;
  background-image:#ui/gameuiskin#option_select_right;
}

[selType=left] > tr > td {
  padding-right:2*@scrn_tgt/100.0;
}
[selType=left] > tr > td > text {
  width:pw;
  text-align:right;
}

td[cellType=left] {
  padding-right:@optPad;
}

td[cellType=right] {
  margin:0;
}

td[cellType=border] > activeText {
  text-align:center;
}

td[cellType=right] optiontext, td[cellType=top] optiontext, td[cellType=bottom] optiontext,
[optionsTextLeftCell=left] td[cellType=left] optiontext
{
  text-align:left;
}

td[cellType=tdRight] activeText {
  text-align:right;
  width:pw;
  padding:0;
}

td[cellType=tdCenter] activeText {
  text-align:center;
  width:pw;
  padding:0;
}

td[cellType=top] {
  width:pw;
  height:@smallRowHeight;
}
td[cellType=bottom] {
  width:pw;
  height:@rows16height;
}
td[cellType=info] {
  width:pw;
}

verticalCellsOptions > * > td[cellType=top] {
  height:1@optionsHeaderRowHeight;
}
verticalCellsOptions > * > td[cellType=bottom] {
  height:1@baseTrHeight;
}

tr[hiddenTr=yes] {
  inactive:yes;
  display:hide;
}

.optionsTable > tr, .optionsTable > tr > td,
.crewTable > tr, .crewTable > tr > td,
.lbTable > tr, .lbTable > tr > td,
.mpTable > tr, .mpTable > tr > td,
.optionsMultiColumn > tr, .optionsMultiColumn > tr > td
{
  css-hier-invalidate:yes;
}
.optionsTable > tr, .mpTable > tr, .crewTable > tr, .lbTable > tr,
.optionsMultiColumn > tr {
  total-input-transparent:yes;
  input-transparent:yes;
}

.mpTable > tr activeText,
.mpTable > tr textareaNoTab {
  color:@commonTextColor;
}

tr > td > optiontext {
  auto-scroll:no;
}
tr:hover > td > optiontext {
  color:@hoverTextColor;
  auto-scroll:yes;
}
tr[selected=yes] > td > optiontext {
  color:@activeTextColor;
  font:@option_selected_font;
  auto-scroll:yes;
}
td[cellType=top] > optiontext {
  color:@grayOptionColor;
  font:@fontSmall;
}
td[cellType=info] > optiontext {
  min-width:0;
}

verticalCellsOptions > tr > td[cellType=top] > optiontext {
  color:@silver;
}

optionValueText {
  pos:1@blockInterval, 50%ph-50%h;
  position:relative;
  text-align:left;
}
[fullWidthOptions=yes] > * > * > optionValueText {
  text-align:right;
}

tr[selected=yes] > td > optionValueText {
  color:@activeTextColor;
  font:@option_selected_font;
}

tr[selected=yes] > td > text, tr[selected=yes] activeText
{
  color:@trSelectedTextColor;

}

[team=red] activeText, [team=red] widthText, [team=red] titleWidthText,
[team=red] textareaNoTab {
  color:@teamRedColor;
}
[team=blue] activeText, [team=blue] widthText, [team=blue] titleWidthText,
[team=blue] textareaNoTab {
  color:@teamBlueColor;
}

[team=red] [inGame=no] activeText,
[team=red] [inGame=no] textareaNoTab {
  color:@teamRedInactiveColor;
}

[team=blue] [inGame=no] activeText,
[team=blue] [inGame=no] textareaNoTab {
  color:@teamBlueInactiveColor;
}

tr[winnerPlace=1st] activeText,
tr[winnerPlace=1st] textareaNoTab {
  color:@raceMode1stPlace;
}
tr[winnerPlace=2nd] activeText,
tr[winnerPlace=2nd] textareaNoTab {
  color:@raceMode2ndPlace;
}

tr[inMySquad=yes] activeText,
tr[inMySquad=yes] textareaNoTab {
  color:@mySquadColor;
}
tr[spectator=yes] activeText,
tr[spectator=yes] textareaNoTab {
  color:@spectatorColor;
}

tr[mainPlayer=yes] activeText, tr[mainPlayer=yes] > td > text,
text[mainPlayer=yes], tr[mainPlayer=yes] textareaNoTab {
  color:@mainPlayerColor;
}

tr[totalColor=yes] > td > activeText,
tr[totalColor=yes] > td > textareaNoTab {
  color:@totalTextColor;
}

tr[winAwardColor=yes] > td > activeText, tr[winAwardColor=yes] > td > textareaNoTab {
  color:@userlogColoredText;
}
.lbTable td[active=yes] activeText {
  color:@lbActiveColumnColor;
}
.lbTable tr[headerRow] > td > activeText {
  pos:50%p.p.w-50%w, ph-1.1h;
  position:absolute;
  color:@white;
  font:@fontMedium;
}

tr[enable=no] activeText, tr[enable=no] > td > text, tr[enable=no] optiontext {
  color:@disabledTextColor;
}

tr[inactive=yes] {
  total-input-transparent:yes;
}

tr[inactive=yes] {
  input-transparent:yes;
}

.tooltipTable td {
  padding:0.5*@scrn_tgt/100.0, 2*@sf/@pf_outdated;
}

activeText[caption=yes], textarea[caption=yes], textAreaCentered[caption=yes] {
  font:@fontMedium;
}
[smallFont=yes] activeText[caption=yes] {
  font:@fontNormal;
}

activeText[titleFont=yes], textAreaCentered[titleFont=yes], menutitle[titleFont=yes] {
  font:@fontBigBold;
}

td[team]   > text {color:@commonTextColor;}
td[team=a] > text, td[team=b] > text {
  color:@transparent;
}

teamAImg, teamBImg {
  height:0.035@sf;
  width:h;
  position:relative;
  top:50%ph-50%h;
  input-transparent:yes;
}

teamAImg, [team=a] > teamImg, [teamIco=allies] > teamImg {
  background-color:@white;
  background-image:#ui/gameuiskin#mp_logo_allies;
}

teamBImg, [team=b] > teamImg, [teamIco=axis] > teamImg {
  background-color:@white;
  background-image:#ui/gameuiskin#mp_logo_axis;
}

[playerTeam=a] [team=b] > teamImg, [team=red] > teamImg,
[playerTeam=b] [team=a] > teamImg,
[playerTeam=a] > teamBImg,
[playerTeam=b] > teamAImg {
  background-color:@teamRedColor;
}

[playerTeam=a] [team=a] > teamImg, [team=blue] > teamImg,
[playerTeam=b] [team=b] > teamImg,
[playerTeam=a] > teamAImg,
[playerTeam=b] > teamBImg {
  background-color:@teamBlueColor;
}

td[team] > teamImg {
  height:@tableIcoSize;
  width:h;
  background-svg-size:@cIco, @cIco;
  position:relative;
  pos:50%pw-50%w, 50%ph-50%h;
}

teamImg > activeText {
  font:@fontSmall;
  margin-top:4;
  text-align:center;
  padding:0;
}

[team=blue] > teamImg[iconSquad=squad] {
  background-image:#ui/gameuiskin#icon_squad;
  background-color:@white;
  size:0.033@sf, 0.033@sf;
}
[team=blue] > teamImg[iconSquad=squad][topSquad=yes] {
  background-image:#ui/gameuiskin#icon_best_squad;
}
[team=red] > teamImg[iconSquad=squad] {
  background-image:#ui/gameuiskin#icon_squad_enemy;
  background-color:@white;
  size:0.033@sf, 0.033@sf;
}
[team=red] > teamImg[iconSquad=squad][topSquad=yes] {
  background-image:#ui/gameuiskin#icon_best_squad_enemy;
}
teamImg[iconSquad=squad] > activeText {
  margin-top:0.01@sf;
}
teamImg[iconSquad=autosquad] {
  background-image:#ui/gameuiskin#table_autosquad_background;
  size:0.025@sf, 0.025@sf;
}
teamImg[iconSquad=autosquad][topSquad=yes] {
  background-image:#ui/gameuiskin#table_best_autosquad_background;
}
teamImg[iconSquad=autosquad] > activeText {
  margin-top:0.004@sf;
}

playerStateIcon {
  re-type:9rect;
  background-repeat:expand;
  size:1@tableIcoSize, 1@tableIcoSize;
}

playerStateIcon[background-image=""] {
  background-color:@transparent;
  display:hide;
}


[id=controls_tbl] > tr > td {
  border-color:@commonMenuButtonColor;
}

trSeparator {
  size:40%p.p.w, 2*@sf/@pf_outdated;
  background-color:@white;
  background-image:#ui/gameuiskin#double_line;
  pos:-50%w, -2*@sf/@pf_outdated;
  position:absolute;
}

chapterSeparator {
  width:@chapterSeparatorSize;
  height:ph;
  input-transparent:yes;
  background-repeat:expand;
  background-position:0, 3;
  background-color:@white;
  background-image:#ui/gameuiskin#separator_vertical;
}

chapterSeparator.notFull {
  height:ph-0.04@sf;
}

chapterSeparator.inTheMiddle {
  pos: 50%pw-50%w, 50%ph-50%h;
  position:absolute;
}

table.transpTable, .transpTable > tr, .transpTable > tr > td {
  input-transparent: yes;
}

.noPad > tr > td {
  padding:0;
}

axisPoint1 {
  size:3*@scrn_tgt/100.0, 3*@scrn_tgt/100.0;
  background-color:#FFFF0000;
  background-image:#ui/gameuiskin#axis_point1;
}

[locked=yes] > axisPoint1 {
  background-color:#FFFFFF00;
}

axisPoint2 {
  size:3*@scrn_tgt/100.0, 3*@scrn_tgt/100.0;
  background-color:#FF00FF00;
  background-image:#ui/gameuiskin#axis_point2;
}

img[hide_when_tooltip_empty=yes][tooltip=""] {
  display: hide;
}


@import "cssElems\spinnerListBox.css"
@import "missionlist.css"
@import "cssElems\unitCard.css"
@import "cssElems\listbox.css"
@import "cssElems\radiobutton.css"
@import "expandable.css"
@import "cssElems\slideListBox.css"
@import "cssElems\dropRightSelect.css"
@import "cssElems\multiselect.css"
@import "cssElems\popupMenu.css"
@import "cssElems\activateSelect.css"
@import "cssElems\browserPopup.css"
@import "cssElems\timebar.css"
@import "cssElems\progressbar.css"
@import "cssElems\newIconWidget.css"
@import "cssElems\shortcutImages.css"
@import "cssElems\hint.css"
@import "cssElems\combobox.css"
@import "cssElems\slider.css"
@import "cssElems\editbox.css"
@import "cssElems\frame.css"
@import "cssElems\navBar.css"
@import "cssElems\focusFrameAnim.css"


@import "help/help.css"
@import "weaponry/weaponry.css"
@import "profile/unlockItem.css"
@import "actionsList/actionsList.css"
@import "gameModeSelect/gameModeSelect.css"
@import "hud/hud.css"
@import "hud/actionBar.css"
@import "spectator.css"
@import "debriefing/debriefing.css"
@import "wndWidgets/navigationPanel.css"
@import "hud/tankState.css"
@import "wheelMenu/wheelmenu.css"
@import "contacts/contacts.css"
@import "items/items.css"
@import "convertExp\convertExp.css"
@import "promo\promoButton.css"
@import "worldWar/worldWar.css"
@import "squads/squadWidget.css"
@import "firstChoice/firstChoice.css"

@import "cssElems\buttons_console.css" 
@import "paginator\paginator.css" 
@import "chat/chat.css"
@import "fileDialog/fileDialog.css"
@import "animated.css"
@import "cssElems\focusBorder.css"

animated_wait_icon
{
  re-type:rotation;
  background-color:@white;
  background-image:ui/loadinganim;
  size:32*@sf/@pf_outdated, 32*@sf/@pf_outdated;
  behavior:increment;
  inc-target:background-rotation;
  inc-factor:120;
  background-repeat:stretch;
  input-transparent:yes;
}

animated_wait_icon.inTextRow {
  size:12@sf/@pf_outdated,12@sf/@pf_outdated;
  pos:2@sf/@pf_outdated,50%ph-50%h;
  position:relative;
}

animated_wait_icon.inTextRowAbsolute {
  size:12@sf/@pf_outdated,12@sf/@pf_outdated;
  position:absolute;
}

animated_wait_icon.missionBox {
  size:16*@sf/@pf_outdated, 16*@sf/@pf_outdated;
  position:absolute;
  pos:12*@sf/@pf_outdated-50%w, 50%ph-50%h;
}

Button_text > animated_wait_icon, animated_wait_icon.byParent {
  size:ph - 4*@sf/@pf_outdated, ph - 4*@sf/@pf_outdated;
}

Button_text.squadWidgetMember > animated_wait_icon {
  size:@dIco, @dIco;
  pos:50%pw-50%w,50%ph-50%h;
  position:absolute;
}

animated_wait_icon[circle=both] > animated_wait_icon {
  circle:aircraft;
  rotation:180;
}

animated_wait_icon[circle] {
  pos:50%pw-50%w, 0;
  position:relative;
  size:130*@sf/@pf_outdated, 130*@sf/@pf_outdated;
  background-color:@transparent;
  css-hier-invalidate:yes;
}

animated_wait_icon[circle=aircraft] {
  background-image:#ui/gameuiskin#wait_circle;
  background-color:@white;
  inc-factor:120;
}

animated_wait_icon[circle=tank],
animated_wait_icon[circle=both] {
  background-image:#ui/gameuiskin#wait_circle_tank;
  background-color:@white;
  inc-factor:56;
}

framedMessage {
  background-color:@frameDarkBackgroundColor;
  border-color:@frameDarkBorderColor;
  border:yes;
  border-offset:@dp;
  input-transparent:yes;
  padding:15@sf/@pf, 3@sf/@pf;
}

advertDiv {
  re-type:9rect;
  background-color:@gray;
  background-image:#ui/gameuiskin#subtitles_backgr_middle;
  background-repeat:expand;
  input-transparent:yes;
}

advertDiv > textAreaCentered {
  font:@fontNormal;
  color:@advertTextColor;
  text-align:center;
}

framedMessage[text=""] {
  display:hide;
}

tooltipObj, tooltip {
  background-color:@frameDarkBackgroundColor;
  border-color:@frameDarkBorderColor;
  border:yes;
  padding:@framePadding;
  tooltip-screen-offset:1@bw, 1@bh;
}

tooltip {
  re-type:textarea;
  behaviour:textarea;
  position:absolute;
  pos:25@sf/@pf, 25@sf/@pf;
  max-width:0.7@sf;
  color:@commonTextColor;
  font:@fontSmall;
  font-bold:@fontNormal;
  timeout:250;
}

tooltipObj {
  color-factor:255;
}

tooltipObj.empty {
  background-color:@transparent;
  border:no;
}

tooltipObj[type=dark] {
  background-color: @frameBackgroundColor;
}

@const imgFrameSize: 1.45*@profileMedalSize;
@const imgFramePad: 3*@sf/@pf_outdated;
@const hoverFrameMargin: 4*@sf/@pf_outdated;
imgFrame {
  re-type:9rect;
  background-repeat:expand;
  background-color:@white;
  background-position:6,6;
  background-image:#ui/gameuiskin#window_body;
  padding:@imgFramePad;
}
imgFrame {
  margin:0, 0, @imgFramePad, @imgFramePad;
  input-transparent: yes;
}
imgFrame[noMargin=yes] {
  margin:0;
}
.hoverFrame > imgFrame {
  size:@imgFrameSize, @imgFrameSize;
  background-color:@transparent;
  background-position:6;
  background-repeat:expand;
  padding:5*@sf/@pf_outdated;
}

awardDiv > layeredIconContainer {
  height:ph;
  width:h;
  pos:(pw-w)/2, (ph-h)/2;
  position:absolute;
}

awardDiv.unlockFrame {
  re-type:9rect;
  background-image:#ui/gameuiskin#button_;
  background-color:@white;
  background-position:6;
  background-repeat:expand;
  padding:2;
}

awardDiv.unlockFrame > layeredIconContainer {
  height:ph - 4;
}

imgButton {
  behaviour:button;
  background-image:#ui/gameuiskin#header_button_;
  background-color:@white;
  background-position:6;
  background-repeat:expand;
  padding:1@framePadding;
  css-hier-invalidate:yes;
  total-input-transparent:yes;
}
.hoverFrame > imgButton {
  size:110*@sf/@pf_outdated, 110*@sf/@pf_outdated;
}
.hoverFrame > imgButton > img , .hoverFrame > imgFrame > img{
  pos:50%pw-50%w, 50%ph-50%h;
  position:absolute;
}
backlight {
  size:pw, ph;
  pos:50%pw-50%w, 50%ph-50%h;
  position:absolute;
  background-repeat:expand;
  background-color:@white;
  input-transparent:yes;
}
imgFrame > backlight[UnlockedObject=yes] {
  background-image:#ui/gameuiskin#acheivement_bg_active;
}
imgFrame > backlight[unlockedObject=no] {
  background-image:#ui/gameuiskin#acheivement_bg_;
}
imgFrame > backlight:hover, imgFrame > backlight:pushed {
  background-image:#ui/gameuiskin#acheivement_bg_hover;
}


imgButton.decal_image:disabled, imgButton.decal_image[unlocked=no] {
  background-image:#ui/gameuiskin#header_button_disabled;
}
imgButton.decal_image:disabled > img {
  background-color:@lockedDecal;
}
imgButton.decal_image:pushed, imgButton.decal_image[selected=yes]
.hoverFrame > imgButton:pushed {
  background-image:#ui/gameuiskin#header_button_active;
}
imgButton[highlighted=yes], imgButton.decal_image[highlighted=yes] {
  background-image:#ui/gameuiskin#header_button_active;
}
imgButton.decal_image:hover, .hoverFrame > imgButton:hover {
  background-image:#ui/gameuiskin#header_button_hover;
}
imgButton.decal_image[unlocked=no]:hover {
  background-image:#ui/gameuiskin#header_button_active;
}
LockedImg{
  size:pw, ph;
  pos:50%pw-50%w, 50%ph-50%h;
  position:absolute;
  background-repeat:expand;
  input-transparent:yes;
}
LockedImg[statusLock=achievement],
LockedImg[statusLock=noDLC],
LockedImg[statusLock=limit] {
  pos:pw-w, ph-h;
  size:@mIco,@mIco;
  background-color:@white;
}
LockedImg[statusLock=achievement] {
  background-image:#ui/gameuiskin#locked_white;
}
LockedImg[statusLock=noDLC] {
  background-image:#ui/gameuiskin#dlc_locked;
}
LockedImg[statusLock=limit] {
  background-image:#ui/gameuiskin#locked;
}

LockedImg[statusLock=noPremium_1] {
  size:pw-6*@sf/@pf_outdated, ph-6*@sf/@pf_outdated;
  background-color:@white;
  background-image:#ui/images/decalslot_nopremium_vertical;
}
LockedImg[statusLock=noPremium_2] {
  size:pw-6*@sf/@pf_outdated, ph-6*@sf/@pf_outdated;
  background-color:@white;
  background-image:#ui/images/decalslot_nopremium_horizontal;
}
LockedImg[statusLock=country] {
  size:@lIco,@lIco;
  background-color:@white;
}
imgButton.decal_image > contentCorner {
  background-color:@white;
  background-image:#ui/gameuiskin#price_bg;
  background-position:6;
  background-repeat:expand;
}
img[click_to_resize] {
  tooltip:#click_to_view_image;
  behaviour:button;
  snd_click:click;
  on_click:onViewImage;
  input-transparent:no;
}

frameBlock {
  background-color:@frameBackgroundColor;
  border-color:@frameBorderColor;
  border:yes;
  border-offset:@dp;
}

frameBlock[ticketsWindow=yes] {
  background-color:@transparent;
}

frameBlock_dark {
  background-color:@frameDarkBackgroundColor;
  border-color:@frameDarkBorderColor;
  border:yes;
  border-offset:@dp;
}

frameBlock_dark[bgTeamColor=red] {
  background-color:@frameTeamRedBackgroundColor;
}

frameBlock_dark[bgTeamColor=blue] {
  background-color:@frameTeamBlueBackgroundColor;
}

frameBlock_dark[hasBorder=no] {
  border:no;
}

modIco {
  css-hier-invalidate:yes;
  total-input-transparent:yes;
}

root {
  id:root-box;
  position:absolute;
  size:sw,sh;
  input-transparent:yes;
}

rootScene {
  position:absolute;
  size:sw,sh;
  input-transparent:yes;
}

collapsableBlock[type=decoratorsList] > content {
  behaviour:posNavigator;
  navigatorShortcuts:full;
  moveX:linear;
  moveY:closest;

  flow:h-flow;
  disableFocusParent:yes;

  background-image:#ui/gameuiskin#block_bg;
  background-color:@white;
  background-position:4;
  background-repeat:expand;
  max-width: pw;
}

fieldReq{
  width: 25*@scrn_tgt/100.0;
  pos: p.p.w, ph/1.55-h/2;
  position: absolute;
  padding: 15@sf/@pf;
  background-color:@frameDarkBackgroundColor;
  border-color:@frameDarkBorderColor;
  border:yes;
  border-offset:@dp;
}

navBar > slotbarDiv {
  pos:50%sw-50%w, sh-h-1@slotbarOffset;
  position:root;
  width:@slotbarWidthFull;
}

optionlist_container[mislist=yes] {
  background-color:@containerMisSelectColor;
}

[class=optionsTable] > tr:disabled optiontext,
[class=optionsTable] > tr:disabled activeText,
[class=optionsTable] > tr[inactiveColor=yes] activeText,
[class=optionsTable] > tr:disabled EditBox {
  color:@fadedTextColor;
}

chapterListPlace {
  width:1@chapterBlockWidth;
}

chapterListPlace[increaseWidthForWide=yes] {
  width:1@chapterWideBlockWidth;
}

[mislist=yes] chapterListPlace {
  width:0.5@sf;
}
[mislist=events] chapterListPlace {
  width:0.05@sf * (1.3 + 1@slotbarCountries);
}
textarea[wrapRight=yes] {
  wrap-indent:2;
  paragraph-indent:0;
}

[mislist=yes] textarea[chapterTextAreaStyle=yes] {
  paragraph-indent:0;
  wrap-indent:0;
  color:@chapterTextColor;
}

textarea.textHeader {
  color:@activeTextColor;
  hideEmptyText:yes;
  paragraph-indent:0;
  wrap-indent:0;
}

textarea.textDescription {
  hideEmptyText:yes;
  paragraph-indent:3;
  wrap-indent:3;
}

movingRoot {
  position:absolute;


  behaviour:basicPos;
  left-base:300;
  left-end:0;
  pos-time:500;
  pos-scale:parent;
  pos-func:square;
  pos-backfunc:square;
  input-transparent:yes;
}

movingRoot[animShow = hide] {
  pos-time:-1000;
}

movingScreen {
  position:absolute;
  size:96%sw,sh;
  behaviour:basicPos;
  top-base:0;
  top-end:-100;
  left-base:2;
  left-end:2;
  pos-time:-500;
  pos-scale:screen;
  input-transparent:yes;
}

movingScreen[animShow = show] {
  pos-time:2000;
}

darkScreen {
  behaviour:basicTransparency;
  transp-base:255;
  transp-end:0;
  transp-time:-500;
  transp-func:square;
}

darkScreen[animShow = show] {
  transp-time:1000;
}

briefingglow {
  background-repeat:expand;
  background-image:ui/briefingglow;
  background-color:@white;

  transp-base:0;
  transp-end:40;
  transp-time:4000;
  transp-func:"projector";
  input-transparent:yes;
  needAnim:yes;
}
briefingglow[_transp-timer=1][color-factor=0] {
  needAnim:no;
}
briefingglow[needAnim=yes] {
  behaviour:basicTransparency;
}

[allAlignLeft=yes] textareaNoTab,
[allAlignLeft=yes] text
{
  text-align:left;
}

text[overlayTextColor=active], textareaNoTab[overlayTextColor=active], textarea[overlayTextColor=active],
textAreaCentered[overlayTextColor=active], optiontext[overlayTextColor=active],
animText[overlayTextColor=active] {
  color:@activeTextColor;
}
text[overlayTextColor=minor], textareaNoTab[overlayTextColor=minor] {
  color:@minorTextColor;
}
text[overlayTextColor=mainPlayer], textareaNoTab[overlayTextColor=mainPlayer] {
  color:@mainPlayerColor;
}
text[overlayTextColor=faded], textarea[overlayTextColor=faded], textareaNoTab[overlayTextColor=faded] {
  color:@fadedTextColor;
}
text[overlayTextColor=silver], textareaNoTab[overlayTextColor=silver] {
  color:@silver;
}
text[overlayTextColor=disabled], textarea[overlayTextColor=disabled],
textareaNoTab[overlayTextColor=disabled], tdiv[includeTextColor=disabled] > textareaNoTab {
  color:@disabledTextColor;
}
activeText[overlayTextColor=good], textarea[overlayTextColor=good], textareaNoTab[overlayTextColor=good] {
  color:@goodTextColor;
}
activeText[overlayTextColor=bad], textarea[overlayTextColor=bad], textareaNoTab[overlayTextColor=bad] {
  color:@badTextColor;
}
activeText[overlayTextColor=warning], textarea[overlayTextColor=warning], textareaNoTab[overlayTextColor=warning],
text[overlayTextColor=warning] {
  color:@warningTextColor;
}
text[overlayTextColor=shopStats] {
  color:@shopStatsColor;
}
text[overlayTextColor=userlog], activeText[overlayTextColor=userlog],
textareaNoTab[overlayTextColor=userlog], textarea[overlayTextColor=userlog] {
  color:@userlogColoredText;
}
activeText[overlayTextColor=unlockHeader], textAreaSmall[overlayTextColor=unlockHeader],
textareaNoTab[overlayTextColor=unlockHeader] {
  color:@unlockHeaderColor;
}
text[overlayTextColor=gold] {
  color:@yellow;
}
text[overlayTextColor=weaponWarning] {
  color:@weaponWarning;
}
text[overlayTextColor=usageRating0] {
  color:@usageRatingColor0;
}
text[overlayTextColor=usageRating1] {
  color:@usageRatingColor1;
}
text[overlayTextColor=usageRating2] {
  color:@usageRatingColor2;
}
text[overlayTextColor=usageRating3] {
  color:@usageRatingColor3;
}
text[overlayTextColor=usageRating4] {
  color:@usageRatingColor4;
}

[overlayTextColor=premium] activeText,
activeText[overlayTextColor=premium] {
  color:@userlogColoredText;
}
[overlayTextColor=premiumNotEarned] activeText,
activeText[overlayTextColor=premiumNotEarned] {
  color:@commonTextColor;
}

textareaNoTab[overlayTextColor=hotkey] {
  color:@hotkeyColor;
}

text.decalsTitle {
  size:pw, @decalIconHeight-2*@sf/@pf_outdated;
}

pattern {
  size:pw, ph;
  background-color:@white;
  background-repeat:repeat;
  background-position:1,2;
  input-transparent:yes;
}
pattern[type=bright_texture] {
  background-image:#ui/gameuiskin#pattern_bright_texture;
}
pattern[type=bright_hor_lines] {
  background-image:#ui/gameuiskin#pattern_bright_hor_lines;
}
pattern[type=dark_diag_lines] {
  background-image:#ui/gameuiskin#pattern_dark_diag_lines;
}
pattern[type=premium] {
  background-image:#ui/gameuiskin#pattern_bright_texture;
}
pattern[type=itemCurrent] {
  background-image:#ui/gameuiskin#pattern_b;
}
pattern[type=itemCurrent2] {
  background-image:#ui/gameuiskin#pattern_w;
}

slotbarEdge {
  re-type:9rect;
  background-position:4;
  background-repeat:expand;
  background-color:@white;
  background-image:#ui/gameuiskin#slotbar_edge_bg;
}
slotbarTop {
  re-type:9rect;
  background-image:#ui/gameuiskin#slotbar_top;
  background-position:2;
  background-repeat:expand;
  background-color:@white;
}

ProjectAwardsPanel {
  position:absolute;
  right:1@bw;
  top:50%sh-50%h;
  flow:vertical;
  input-transparent:yes;
}

ProjectAwardsPanel > img {
  size:48*@sf/@pf_outdated, 48*@sf/@pf_outdated;
  color-factor:145;
  input-transparent:yes;
}

ProjectAwardsPanel > img:hover {
  color-factor:255;
}

TopMenuPanel {
  pos:0,0;
  position:root;
  size:sw, 1@topBarHeight;
  css-hier-invalidate:yes;
}

TopMenuPanelBg {
  height:ph;
  re-type:9rect;
  background-image:#ui/gameuiskin#top_bar;
  background-color:@white;
  background-position:1, 6, 1, 2;
  background-repeat:expand;
}

BottomMenuPanel {
  re-type:9rect;
  pos:0, sh-h - 1@bh;
  position:root;
  size:sw, 1@bottomBarHeight - 1@bh;
  background-color:@bottomBarBackgroundColor;
}

BottomMenuPanel > line {
  position: "absolute";
  size: "pw, 1@dp";
  background-color: '@bottomBarForegroundColor';
}

shadowSafeArea {
  size:pw, 1@bh;
  pos:0, 0;
  position: "absolute";
  background-color:'@gameModeColor';
}

BottomMenuPanel > shadowSafeArea {
  pos:0, ph;
}

CompanyLogo {
  re-type:9rect;
  size:256*@loginLogoScale, 128*@loginLogoScale;
  background-image:#ui/gaijin_logo;
  background-repeat:expand;
  background-position:0;
  background-color:@white;
  input-transparent:yes;
}

copyright {
  re-type:text;
  color:@commonTextColor;
  text:"#mainmenu/legal_text";
  font:@fontNormal;
  padding-right:0.04@sf;
  text-align:center;
  input-transparent:yes;
}

Red_shadow_light {
  background-color: #00550000;
  background-image:#ui/gameuiskin#top_bar_light;
  input-transparent:yes;
}

Red_shadow_light.inverted {
  background-position:0,h,0,h;
}

TopMenuPanelBGPlace[needRedShadow=no] > * > Red_shadow_light {
  background-color:@transparent;
}

TopMenuPanel > TopMenuPanelBGPlace {
  size:"pw, ph-1@bh+1@topGamercardDarkLineHeight";
  pos:"0, 1@bh-1@topGamercardDarkLineHeight";
  position:absolute;
  css-hier-invalidate:yes;
}

GameLogoPlate {
  total-input-transparent:yes;
}

GameLogoPlate > Shadow {
  re-type:9rect;
  position:relative;
  padding:3*@sf/@pf_outdated, 2*@sf/@pf_outdated;
  background-image:#ui/gameuiskin#window_body_shadow;
  background-color:@white;
  background-position:6;
  background-repeat:expand;
}

GameLogoPlate redPlate {
  re-type:9rect;
  padding:3*@sf/@pf_outdated, 2*@sf/@pf_outdated;
  background-image:#ui/gameuiskin#red_plate;
  background-color:@white;
  background-position:6;
  background-repeat:expand;
}

GameLogoPlate > infoBlock {
  height:0.02@sf;
}

GameLogoPlate > infoBlock[type=left] {
  pos:-w, 1@topBarHeight+4@dp;
  position:absolute;
  padding-right:10*@sf/@pf_outdated;
}

GameLogoPlate > infoBlock[type=right] {
  pos:pw, 1@topBarHeight;
  position:absolute;
  padding-left:10*@sf/@pf_outdated;
}

TopMenuPanel > infoBlock {
  pos:sw - w - 1@offsetBetweenScreenAndAirinfo, 1@topBarHeight;
  position:absolute;
}

gamercard_div[type=wwMap] > gamercard > TopMenuPanel > infoBlock {
  pos:sw - w - 1@wwMapPanelInfoWidth - 3@framePadding, 1@topBarHeight + 3*@sf/@pf_outdated;
  position:absolute;
}

slotbarTop > tdiv[offset=yes] {
  padding-left:1@offsetFromEdge + 1@shopWidthMax + 10@sf/@pf_outdated;
}

bottomButtonsDiv {
  id:"air_item_bottom_buttons";
  left:0.5pw - 0.5w;
  top:ph -7*@sf/@pf_outdated;
  position:absolute;
  width:pw;
  css-hier-invalidate:yes;
  color-factor:255;
}

.slotbarTable bottomButtonsDiv {
  top:ph;
}

activeText[airBought=yes] {
  color:@activeTextColor;
}

activeText[airCanBuy=yes] {
  color:@hotkeyColor;
}

activeText[airCanBuy=no] {
  color:@weaponWarning;
}

textareaNoTab.highlightButton {
  behaviour:button;
  padding:3@sf/@pf;
  padding-bottom:0;
  snd_click:click;
  input-transparent:no;
  background-color:@frameDarkBackgroundColor;
  border-color:@frameDarkBorderColor;
  border:yes;
}

textareaNoTab.highlightButton:hover {
  background-color:@frameDarkHoverBgColor;
  color:@fadedTextColor;
}

textareaNoTab.highlightButton:pushed {
  background-color:@frameDarkActiveBgColor;
  border-color:@frameDarkSelectedBorderColor;
  color:@activeTextColor;
}

airInfoBlock {
  background-image: #ui/gameuiskin#expandable_item_ww_transp_reflect;
  re-type:9rect;
  background-position:3, 3, 33, 3;
  color-factor:175;
  background-color: @white;
  background-repeat: expand;
  flow:horizontal;
  pos: 0, @infoPanelVertPosition;
  position:absolute;
  min-height:4@sIco;
  css-hier-invalidate:yes;
  total-input-transparent:yes;
}

airInfoBlock[toggled=no] {
  background-color:@transparent;
}

crewUnitSpecUpgradeTooltip textarea,
skillParametersTooltip textarea,
airInfoBlock textarea,
airInfoBlock text {
  font:@fontSmall;
  paragraph-indent:0;
  padding-left:0; padding-right:0;
}

crewUnitSpecUpgradeTooltip textareaNoTab[exp_upgrade_text_area=yes] {
  font:@fontSmall;
}

airInfoBlock textarea[crew_data=yes], airInfoBlock text[crew_data=yes] {
  font:@fontNormal;
}

airInfoBlock td {
  padding:0, @referenceProgressHeight, 4*@sf/@pf_outdated, @referenceProgressHeight + @referenceProgressOffset;
}

airInfoHeader {
  re-type:text;
  color:@lightHighlightedTextColor;
  font:@fontNormalBold;
  text-align:center;
  position:relative;
  width:@airInfoPanelWidth;
  height:@airInfoToggleButtonSize;
}

collapsableBlock {
  width:pw;
  flow:vertical;
  css-hier-invalidate:yes;
}
collapsableBlock > header {
  size:pw, @baseTrHeight;
  css-hier-invalidate:yes;
}
collapsableBlock > header > fullSizeCollapseBtn {
  tooltip:"";
  css-hier-invalidate:yes;
}
collapsableBlock > header > fullSizeCollapseBtn > text {
  behaviour:OverflowScroller;
  position:absolute;
  size:pw,ph;
  padding-left:@sIco;
  text-align:left;
  color: @commonMenuButtonColor;
  input-transparent:yes;
}
collapsableBlock > header > fullSizeCollapseBtn > activeText {
  input-transparent:yes;
}
collapsableBlock > header > fullSizeCollapseBtn:hover,
collapsableBlock:focus > header > fullSizeCollapseBtn,
collapsableBlock[selected=yes] > header > fullSizeCollapseBtn {
  background-color:@white;
  background-image:#ui/gameuiskin#option_select_even;
  background-position:4,4;
  background-repeat:expand;
}

collapsableBlock > header > fullSizeCollapseBtn:hover > text,
collapsableBlock:focus > header > fullSizeCollapseBtn > text,
collapsableBlock[selected=yes] > header > fullSizeCollapseBtn:[selected=yes] > text {
  color:@activeTextColor;
}

fadedImageFrame {
  re-type:9rect;
  background-image:#ui/gameuiskin#block_bg_rounded_dark;
  background-color:@white;
  background-repeat:expand;
  background-position:4;
  foreground-repeat:repeat;
  foreground-color:@white;
  foreground-position:4,4;
  foreground-image:#ui/gameuiskin#pattern_bright_hor_lines;
  padding:3;
}

fadingBox {
  re-type:9rect;
  background-repeat:expand;
  background-position:0,4;
  background-image:#ui/gameuiskin#white_with_gradient_alpha;
}

fadingBox[type=right] {
  rotation:180;
}

fadedImageFrame fadingBox {
  background-color:@fadedImageFrameColor;
}

autosize[display=none] {
  min-width:0;
  width:1;
  min-height:0;
  height:1;
}

autoScroll, optiontext[auto-scroll=yes] {
  behaviour:OverflowScroller;
  move-pixel-per-sec:50*@scrn_tgt/100.0;
  move-sleep-time:1000;
  move-delay-time:2000;
}

paymentItem {
  size:pw, ph;
  re-type:9rect;
  background-position:3, 4, 3, 5;
  background-repeat:expand;
  background-image:#ui/gameuiskin#item;
  background-color:@white;
  padding:3*@sf/@pf_outdated;
  css-hier-invalidate:yes;
  total-input-transparent:yes;
}

paymentItem shopItemText {
  font:@fontMedium;
  color:@commonTextColor;
}

paymentItem:hover shopItemText {
  color:@white;
}

paymentItem > icon {
  position:relative;
  pos:50%pw-50%w, 50%ph-50%h;
  size:1*@paymentIconWidth, 1*@paymentIconHeight;
  background-svg-size: @paymentIconWidth, @paymentIconHeight;
  background-repeat:aspect-ratio;
  background-color:@commonTextColor;
}

paymentItem:hover > icon {
  background-color:@white;
}

paymentItem > icon[background-image=""] {
  background-color:@transparent;
}

topMenuButtons {
  border:yes;
  border-color: @frameDarkBorderColor;
  background-color: @frameDarkBackgroundColor;
  padding:1@dp;
}
topMenuButtons > line {
  size:pw, 1@dp;
  pos:0,-1@dp;
  position:absolute;
  background-color:@frameDarkBackgroundColor;
}

rightClickMenu {
  border:yes;
  border-color: @frameScaleableBorderColor;
  background-color:@frameDarkBackgroundColor;
  css-hier-invalidate: yes;
  padding: 1@dp;
}

gamercardShade {
  size:2*sw, sh/2;
  pos:50%sw-50%w, 0;
  position:root;
  background-color:@black;
  background-image:#ui/gameuiskin#optionlist_background_top;
  background-position:4;
  background-repeat:expand;
}

ShadowPlate {
  re-type:9rect;
  background-image:#ui/gameuiskin#window_body_shadow;
  background-color:@white;
  background-position:4;
  background-repeat:expand;
}

ShadeDiv {
  background-color:#91020509;
}

ShadeDiv.authorization {
  position:relative;
  pos:50%pw-50%w;
  width:pw-2@dp;    padding:0.015@scrn_tgt + 1@framePadding,0.015@scrn_tgt; }

debriefingTab {
  size:pw, ph;
  position:absolute;
}

moveObjSizeDiv activeText[animateFontSize=yes] {
  font-ht:ph;
}

activeText[text-align=center] {
  padding:0;
}

dbg34 {
  pos:50%sw-50%w, 50%sh - 50%h;
  position:root;
  size:sh * 4 / 3, sh;
  border:yes; border-color:@red;
}


[halign=center] {
  position:relative;
  left:(pw-w)/2;
}

[valign=center], td[td-valign=center] > * {
  position:relative;
  top:(ph-h)/2;
}

expandable * {
  css-hier-invalidate:yes;
}





@import "scroll.css"
@import "shortcuts.css"
@import "finalOverrides.css"



