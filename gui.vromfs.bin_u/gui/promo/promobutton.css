@const maxPromoButtonWidth: 1@arrowButtonWidth + 1@offsetBetweenScreenAndAirinfo + 1@arrowBaseBtnWidth + 1@overflowScreenButton + 1@newWidgetIconHeight + 1@scrollBarSize + 0.13@sf;

@const arrowButtonHeight: 0.042@sf;
@const arrowButtonWidth: 0.35@sf;

@const arrowButtonWithImageHeight: 0.17@sf;

@const promoButtonTextPadding: 2;
@const overflowScreenButton: 7;

@const arrowBaseBtnWidth: 1/3@mIco + 1@overflowScreenButton;

@const promoButtonSizeWithOffsets: 1@mIco;
@const promoBtnNotCollapsedBgVPadding: 20@sf/@pf;

@const imageRouletteTextAreaHeigth: 48@sf/@pf;

@const promoButtonMinHeight: 45@sf/@pf;

@const airInfoToggleButtonSize: @mIco + 2@buttonImgPadding;

@const promoButtonPadding: (1@offsetBetweenScreenAndAirinfo - 1@cIco) $max (1@overflowScreenButton + 1@blockInterval);

promoButton {
  background-image: #ui/gameuiskin#expandable_item_ww_transp;
  background-position: 5,2;
  background-color: @white;
  background-repeat: expand;
  color-factor:200;

  css-hier-invalidate:yes;
  total-input-transparent:yes;

  pos: pw - w + 1@overflowScreenButton, 0;
  position: relative;

  margin-bottom: 1@blockInterval;

  min-height: @promoButtonMinHeight;

  padding-right:1@promoButtonPadding;
}

promoButton:hover {
  color-factor:255;
  background-image: #ui/gameuiskin#expandable_item_sub_transp;
}

promoButton > uncollapsedContainer {
  css-hier-invalidate:yes;
  position:relative;
}

promoButton[type=battleTask] expandable {
  behaviour: button;
  background-color:@transparent;
  width:1@arrowButtonWidth + 1@offsetBetweenScreenAndAirinfo;
  pos: 0, 0;
  position: relative;
  padding:0;
}

promoButton[collapsed=no][type=imageButton],
promoButton[collapsed=no][type=imageRoulette] {
  padding-top:@promoBtnNotCollapsedBgVPadding;
  padding-bottom:@promoBtnNotCollapsedBgVPadding;
}

promoButton[collapsed=no][type=arrowButton] {
  padding-top:0;
  padding-bottom:0;
}

promoButton[type=recentItems] fillBlock {
  height: 0.5@itemHeight + 0.038@scrn_tgt;
  margin-left:0.25@itemHeight;
}

promoButton[inactiveColor=yes] {
  btnHover:no;
}

promoButton fillBlock {
  behaviour: button;
  css-hier-invalidate:yes;
  position: relative;
  flow:vertical;
}

promoButton[type=imageRoulette] fillBlock {
  position:absolute;
  transp-base:0;
  transp-end:255;
  transp-func:square;
}

promoButton fillBlock[animation=show] {
  transp-time:1500;
  needAnim:yes;
}

promoButton fillBlock[animation=hide] {
  transp-time:-1500;
  needAnim:yes;
}

promoButton fillBlock[_transp-timer=1][color-factor=255][animation=show] {
  needAnim:no;
}

promoButton fillBlock[_transp-timer=0][animation=hide] {
  needAnim:no;
  display:hide;
}

promoButton fillBlock[needAnim=yes] {
  behaviour:massTransparency;
}

promoButton[type=arrowButton] fillBlock,
promoButton[type=battleTask] expandable[setStandartWidth=yes] {
  height:1@arrowButtonHeight;
  width: 1@arrowButtonWidth;
}

promoButton[type=battleTask] expandable[setStandartWidth=yes] > selImg,
promoButton[type=battleTask] expandable[setStandartWidth=yes] > selImg > header {
  height:ph;
}

promoButton[type=simpleList] {
  height:1@arrowButtonHeight;
  width:1@arrowButtonWidth + 1@offsetBetweenScreenAndAirinfo;
  padding-right:1@offsetBetweenScreenAndAirinfo;
}

promoButton > collapsedContainer {
  behaviour: button;
  padding-left:h;
  flow:vertical;
}

promoButton[collapsed=no] > collapsedContainer {
  width:1@arrowButtonWidth;
}

promoButton > collapsedContainer > shortInfoBlock {
  pos:pw-w, 0.5@arrowButtonHeight - 0.5h;
  position:relative;
}

promoButton fillBlock > textareaFade,
promoButton > textareaFade {
  top: ph/2-h/2;
  position: absolute;
  width:pw;
  css-hier-invalidate:yes;
}

promoButton[type=imageButton] fillBlock > textareaFade,
promoButton[type=imageRoulette] fillBlock > textareaFade {
  top: ph-h;
  padding:1@promoButtonTextPadding;
  background-color:@modalShadeColor;
  min-height: @imageRouletteTextAreaHeigth;
}

promoButton fillBlock > textareaFade > textarea,
promoButton > textareaFade > textarea {
  left: pw-w;
  top: 50%ph-50%h;
  position: relative;

  max-width:pw;
  text-align:center;

  removeParagraphIndent:yes;
  css-hier-invalidate:yes;

  pare-text:yes;
  overflow-y:none;
}

promoButton > textareaFade > textarea {
  left:"";
  width:fw;
}

promoButton[type=imageButton] fillBlock > textareaFade > textarea,
promoButton[type=imageRoulette] fillBlock > textareaFade > textarea {
  left: pw/2-w/2;
}

promoButton fillBlock > imageFade {
  pos:0;
  position:relative;
  css-hier-invalidate:yes;
}

promoButton fillBlock > imageFade > img {
  size:pw, ph;
  background-position:0;
  background-repeat:expand;
}

promoButton:hover[type=imageButton] fillBlock > imageFade,
promoButton:hover[type=imageRoulette] fillBlock > imageFade,
promoButton:hover[type=arrowButton] fillBlock > imageFade {
}

promoButton:hover[type=imageButton] fillBlock > imageFade > img,
promoButton:hover[type=imageRoulette] fillBlock > imageFade > img,
promoButton:hover[type=arrowButton] fillBlock > imageFade > img {
  background-color:@white;
}

promoButton[collapsed=yes] > expandable,
promoButton[collapsed=yes] > fillBlock,
promoButton[collapsed=yes] > uncollapsedContainer,
promoButton[collapsed=no] > collapsedContainer {
  display:hide;
}

shortHeaderText, shortHeaderIcon {
  behaviour:textArea;
  re-type:textarea;

  pos:0, 50%ph-50%h;
  position:relative;

  font:@fontMedium;
  pare-text:yes;
  color:@commonPromoButtonTextColor;
  hideEmptyText:yes;
  text-align:right;
}

shortHeaderText { font:@fontNormal; }

promoButton > collapsedContainer > shortHeaderText {
  margin-right:1@promoButtonTextPadding;
}

collapsedContainer {
  css-hier-invalidate:yes;
}

promoButton[type=arrowButton] fillBlock > textareaFade > textarea,
promoButton > textareaFade > textarea,
promoButton fillBlock > textareaNoTab {
  color: @commonPromoButtonTextColor;
}

promoButton:hover fillBlock > textareaFade > textarea,
promoButton:hover > textareaFade > textarea,
promoButton[type=simpleList][selected=yes] > textareaFade > textarea,
promoButton:hover expandable > selImg > header > textareaNoTab,
promoButton:hover expandable > selImg > textareaNoTab,
promoButton:hover fillBlock > textareaNoTab,
promoButton:hover collapsedContainer > shortHeaderText {
  color: @buttonColorHover;
}

promoButton.withImage:hover fillBlock > textareaFade > textarea {
  color: @buttonFontColorHover;
}

promoButton:hover fillBlock > textareaFade {
  background-color:@hoverPromoButtonTextColor;
}

promoButton:hover[type=arrowButton] fillBlock > textareaFade,
promoButton:hover[invisibleHover=yes] fillBlock > textareaFade {
  background-color:@transparent;
}

promoButton[inactiveColor=yes] fillBlock > textareaFade > textarea,
promoButton:disabled fillBlock > textareaFade > textarea,
promoButton[inactiveColor=yes] expandable > selImg > header > textareaNoTab,
promoButton:disabled expandable > selImg > header > textareaNoTab,
promoButton[inactiveColor=yes] collapsedContainer > shortHeaderText,
promoButton[inactiveColor=yes] collapsedContainer > shortHeaderIcon {
  color:@inactiveButtonTextColor;
}

promoButton:hover[inactiveColor=yes] fillBlock > textareaFade > textarea,
promoButton:hover[inactiveColor=yes] expandable > selImg > header > textareaNoTab,
promoButton:hover[inactiveColor=yes] collapsedContainer > shortHeaderText,
promoButton:hover[inactiveColor=yes] collapsedContainer > shortHeaderIcon {
  color:@inactiveButtonHoverTextColor;
}

promoButton[invisibleHover=yes] collapsedContainer > shortHeaderText,
promoButton[invisibleHover=yes] > uncollapsedContainer > fillBlock > textareaFade > textarea {
  color: @commonPromoButtonTextColor;
}


promoButton fillBlock[link] > textareaFade > textarea {
  color:@linkTextColor;
}

promoButton fillBlock[link] > textareaFade > textarea > underline {
  background-color:@linkTextColor;
}

promoButton:hover fillBlock[link] > textareaFade > textarea,
[show_console_buttons=yes] promoButton:focus fillBlock[link] > textareaFade > textarea {
  color:@linkTextHoverColor;
}

promoButton:hover fillBlock[link] > textareaFade > textarea > underline,
[show_console_buttons=yes] promoButton:focus fillBlock[link] > textareaFade > textarea > underline {
  background-color:@linkTextHoverColor;
}

promoButton[type=autoWidth] {
  pos:pw-w, 0;
}

promoButton[type=autoWidth] > collapsedContainer,
promoButton[type=autoWidth] > uncollapsedContainer > fillBlock > textareaFade {
  width:0;
  position: relative;
}

promoButton[type=autoWidth] > collapsedContainer > shortHeaderText {
  max-width:p.p.p.w - 1@promoButtonSizeWithOffsets;
}

promoButton[type=autoWidth] > uncollapsedContainer > fillBlock > textareaFade > textarea {
  max-width:p.p.p.p.p.w - 1@promoButtonSizeWithOffsets;
}

shortHeaderText[animation]
{
  pos:pw-w, 50%ph-50%h;
  position:absolute;

  transp-base:0;
  transp-end:255;
  transp-func:square;
  transp-time:500;
  blend-time:0;   needAnim:yes;
}

shortHeaderText[animation=hide] {
  transp-time:-150;
}

shortHeaderText[_transp-timer=0][animation=hide] {
  needAnim:no;
  display:hide;
}

shortHeaderText[_transp-timer=1][animation=show] {
  needAnim:no;
}

shortHeaderText[needAnim=yes] {
  behaviour:basicTransparency;
}

hangarToggleButton {
  behaviour:button;
  size:@dIco, @dIco;
  snd_click:click;
  tooltip:"#mainmenu/btnCollapse";
  display:show;
  enable:yes;
  css-hier-invalidate:yes;

  margin-left: 1@blockInterval;
  position:relative;
}

hangarToggleButton[alwaysShow=yes] {
  size:@airInfoToggleButtonSize, @airInfoToggleButtonSize;
  margin-left: 0;
  background-image:'';
}

promoButton[invisibleHover=yes] > hangarToggleButton {
  not-input-transparent:yes;
}

hangarToggleButton:hover, hangarToggleButton:focus {
  background-color:@menuButtonColorHover;
}

hangarToggleButton:pushed {
  background-color:@menuButtonColorPushed;
}

promoButton[collapsed=yes] > hangarToggleButton,
promoButton[collapsed=no][type=arrowButton] > hangarToggleButton,
promoButton[collapsed=no][type=battleTask] > hangarToggleButton {
  top: @promoButtonMinHeight/2 - h/2;
}

promoButton[type=recentItems] > hangarToggleButton {
  bottom: @promoButtonMinHeight/2 - h/2;
}

[collapsed=yes] > hangarToggleButton {
  tooltip:"#mainmenu/btnExpand";
}

hangarToggleButton > directionImg {
  background-repeat:aspect-ratio;
  background-image:#ui/gameuiskin#spinnerListBox_arrow_up.svg;
  background-svg-size:@cIco, @cIco;
  pos:(pw-w)/2, (ph-h)/2;
  position:absolute;
  size:@cIco, @cIco;
  rotation:270;
  input-transparent:yes;
  background-color:@commonTextColor;
}

promoButton:hover[collapsed=no] > hangarToggleButton > directionImg,
[show_console_buttons=yes] promoButton:focus[collapsed=no] > hangarToggleButton > directionImg,
promoButton[collapsed=yes] > hangarToggleButton > directionImg,
promoButton[invisibleHover=yes] > hangarToggleButton > directionImg,
hangarToggleButton[alwaysShow=yes] > directionImg {
  background-color:@commonTextColor;
}

hangarToggleButton:hover > directionImg, hangarToggleButton:focus > directionImg {
  background-color:@white;
}

hangarToggleButton[type=right] > directionImg { rotation:90; }
[collapsed=yes] > hangarToggleButton > directionImg { rotation:90; }
[collapsed=yes] > hangarToggleButton[type=right] > directionImg { rotation:270; }
